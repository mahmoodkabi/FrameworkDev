@model FrameworkDev.Web.Areas.Management.Models.VM_User

@using Kendo.Mvc.UI
@using FrameworkDev.Web.Helpers.KendoMVC
@using FrameworkDev.Web.Areas.Management.Models
@{
    /**/

    ViewBag.Title = "كاربران در گروه";
    var currentUser = User as FrameworkDev.Web.Helpers.Authentication.CustomPrincipal;
}

@(Html.Kendo().Grid<VM_User‍>().Name("UsersInRoleGrid")

                 .Columns(columns =>
                 {

                     columns.Bound(c => c.UserName).Width(100);
                     columns.Bound(c => c.FirstName).Width(100);
                     columns.Bound(c => c.LastName).Width(100);
                     columns.Bound(c => c.Email).Width(100);
                     columns.Bound(c => c.IsActive).ClientTemplate(
            "#if (IsActive) {#" +
            "<span class='label label-success'>فعال</span>" +
            "#} else {#" +
            "<span class='label label-danger'>غیرفعال</span>" +
            "#}#").Width(80);
                     columns.Command(command => { command.Edit().Visible("editVisible").Text("ویرایش"); command.Destroy().Visible("delVisible").Text("حذف"); }).Width(180);
                 })
            .Editable(editable => editable.Mode(GridEditMode.InLine).ConfirmDelete("حذف اطلاعات").DisplayDeleteConfirmation("آیا از حذف اطلاعات اطمینان دارید؟"))
            //.HtmlAttributes(new { style = "height: 500px" })
            .Scrollable(x => x.Height("auto"))
            .DataSource(dataSource => dataSource
            .Ajax()
            .Model(model => model.Id(p => p.UserId))
            .Read(read => read.Action("LoadUserList", "Users", new { area = "Management" }).Data("additionalDataEInsUpd"))
            .Create(create => create.Action("AddUserListSave", "Users", new { area = "Management" }).Data("additionalDataEInsUpd"))
            .Update(update => update.Action("EditUserListSave", "Users", new { area = "Management" }).Data("additionalDataEInsUpd"))
            .Destroy(destroy => destroy.Action("DeleteUserListSave", "Users", new { area = "Management" }).Data("additionalDataEInsUpd"))
            .Events(events => events.Error("function(args){telerikGridAjaxErrorhandler(args,'UsersInRoleGrid');}").RequestEnd("onRequestEnd"))

            )
)

<script type="text/kendo-template" id="GridErrorMessage">
    <div class="k-widget k-tooltip k-tooltip-validation k-invalid-msg field-validation-error" style="margin: 0.5em; display: block; " data-for="#=field#" data-valmsg-for="#=field#" id="#=field#_validationMessage">
        <span class="k-icon k-warning"></span>#=message#<div class="k-callout k-callout-n"></div>
    </div>
</script>

<script type="text/javascript">

var validationMessageTmpl = kendo.template($("#GridErrorMessage").html());

    function telerikGridAjaxErrorhandler(args, myGridId) {
        if (args.errors) {
            var grid = $("#" + myGridId).data("kendoGrid");
            grid.one("dataBinding", function (e) {
                e.preventDefault();   // cancel grid rebind if error occurs

                for (var error in args.errors) {
                    showMessage(grid.editable.element, error, args.errors[error].errors);
                }
            });
        }
    }

function showMessage(container, name, errors) {
//add the validation message to the form
container.find("[data-valmsg-for=" + name + "],[data-val-msg-for=" + name + "]")
.replaceWith(validationMessageTmpl({ field: name, message: errors[0] }))
}

function onRequestEnd(e) {
if (e.response) {
if (e.type === 'create') {
Alert('fa fa-smile-o', 'موفق', 'ایجاد كاربر با موفقیت ثبت شد', 'green', '', null);
}
else if (e.type === 'update') {
Alert('fa fa-smile-o', 'موفق', 'كاربر با موفقیت ویرایش شد', 'green', '', null);
}
}
}

function editVisible(dataItem) {
return Str2Bool('@currentUser.HasPermissionUI("EXR:ELT:U")');
}
function addVisible(dataItem) {
return Str2Bool('@currentUser.HasPermissionUI("EXR:ELT:C")');

}
function delVisible(dataItem) {
return Str2Bool('@currentUser.HasPermissionUI("EXR:ELT:D")');

}
</script>
